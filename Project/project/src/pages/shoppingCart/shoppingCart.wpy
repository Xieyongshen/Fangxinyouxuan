<style lang="less">
page {
    padding-bottom: 90rpx;
}

.shoppingCart-header {
    width: 750rpx;
    height: 5rpx;
    background: #ffffff;
    position: absolute;
    top: 62px;
}

.shoppingCart-shop {
    width: 750rpx;
    height: 80rpx;
    font-size: 28rpx;
    line-height: 80rpx;
    text-align: center;
    background: #ffffff;
}

.shoppingCart-icon-position {
    width: 20rpx;
    height: 30rpx;
    margin: 25rpx 15rpx 25rpx 0;
    vertical-align: top;
}

.shoppingCart-block {
    width: 750rpx;
    margin-bottom: 20rpx;
    box-sizing: border-box;
    background: #ffffff;
}

.shoppingCart-product {
    padding-left: 30rpx;
}

.shoppingCart-item {
    width: 720rpx;
    height: 90rpx;
    font-size: 28rpx;
    line-height: 90rpx;
    padding-right: 30rpx;
    box-sizing: border-box;
    text {
        height: 90rpx;
        font-size: 28rpx;
        line-height: 90rpx;
        box-sizing: border-box;
        float: right;
    }
}

.shoppingCart-item:not(:last-child) {
    border-bottom: 1rpx solid #f2f2f2;
}

.shoppingCart-product-selectAll {
    height: 90rpx;
    display: inline-block;
    text {
        font-size: 28rpx;
        line-height: 90rpx;
        vertical-align: top;
        display: inline-block;
    }
    .shoppingCart-icon-select {
        margin: 22rpx 15rpx 22rpx 0;
    }
}

.shoppingCart-icon-select {
    width: 45rpx;
    height: 45rpx;
    text-align: center;
    border-radius: 50%;
    display: inline-block;
}

.shoppingCart-product-tip {
    max-width: 550rpx;
    height: 90rpx;
    color: #f5333f;
    font-size: 24rpx;
    line-height: 90rpx;
    float: right;
    text {
        max-width: 500rpx;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        display: inline-block;
        float: none;
    }
    .icon-in {
        width: 15rpx;
        height: 25rpx;
        margin: 32.5rpx 0 32.5rpx 10rpx;
        vertical-align: top;
    }
}

.shoppingCart-product-list {
    width: 720rpx;
    border-bottom: 1rpx solid #f2f2f2;
}

.shoppingCart-product-item {
    width: 720rpx;
    height: 225rpx;
    padding: 30rpx 30rpx 30rpx 0;
    box-sizing: border-box;
    .shoppingCart-icon-select {
        margin: 60rpx 0;
        vertical-align: top;
    }
}

.product-item-image {
    width: 165rpx;
    height: 165rpx;
    margin: 0 15rpx;
    border-radius: 10rpx;
    background: #fdedeb;
    vertical-align: top;
}

.product-item-content {
    width: 450rpx;
    height: 165rpx;
    display: inline-block;
    position: relative;
    vertical-align: top;
}

.product-item-name {
    width: 450rpx;
    font-size: 26rpx;
    line-height: 45rpx;
    letter-spacing: 2rpx;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.product-item-price {
    color: #f5333f;
    font-size: 26rpx;
    line-height: 45rpx;
    margin-top: 75rpx;
    text {
        color: #808080;
        font-size: 22rpx;
        line-height: 20rpx;
        display: inline-block;
        text-decoration: line-through;
    }
}

.product-item-count {
    position: absolute;
    right: 0;
    bottom: 10rpx;
    text {
        font-size: 26rpx;
        line-height: 35rpx;
        margin: 0 30rpx;
        vertical-align: top;
        display: inline-block;
    }
}

.count-reduce,
.count-add {
    width: 35rpx;
    height: 35rpx;
    border-radius: 50%;
    vertical-align: top;
    display: inline-block;
}

.shoppingCart-product-subtotal {
    width: 720rpx;
    height: 80rpx;
    font-size: 26rpx;
    line-height: 80rpx;
    text-align: right;
    padding-right: 30rpx;
    box-sizing: border-box;
    text {
        color: #808080;
    }
}

.shoppingCart-redPacket {
    padding-left: 30rpx;
}

.shoppingCart-redPacket-icon {
    width: 25rpx;
    height: 30rpx;
    margin-right: 10rpx;
}

.shoppingCart-redPacket .icon-in,
.shoppingCart-result-deliver .icon-in {
    width: 15rpx;
    height: 25rpx;
    margin: 32.5rpx 0 32.5rpx 10rpx;
    vertical-align: top;
}

.status-false {
    color: #bfbfbf;
}

.status-true {
    color: #f5333f;
}

.shoppingCart-result {
    padding-left: 30rpx;
}

.shoppingCart-deliver-input {
    width: 550rpx;
    height: 90rpx;
    text-align: right;
    float: right;
}

.picker-null {
    color: #bfbfbf;
}

.shoppingCart-empty {
    width: 750rpx;
    height: 400rpx;
    padding-top: 80rpx;
    padding-bottom: 105rpx;
    text-align: center;
    background: #ffffff;
    box-sizing: border-box;
}

.shoppingCart-empty-img {
    width: 145rpx;
    height: 160rpx;
    display: inline-block;
}

.shoppingCart-empty-text {
    color: #bfbfbf;
    font-size: 28rpx;
    line-height: 30rpx;
    margin-top: 15rpx;
}

.shoppingCart-recommend {
    padding: 35rpx 20rpx 0 20rpx;
}

.shoppingCart-recommend-title {
    font-size: 32rpx;
    line-height: 45rpx;
    padding-left: 10rpx;
    margin-bottom: 35rpx;
}

.shoppingCart-settle {
    width: 750rpx;
    height: 90rpx;
    padding-left: 30rpx;
    background: #ffffff;
    border-top: 1rpx solid #f2f2f2;
    box-sizing: border-box;
    position: fixed;
    bottom: 0;
    z-index: 99;
}

.shoppingCart-settle-selectAll {
    height: 90rpx;
    display: inline-block;
    text {
        font-size: 32rpx;
        line-height: 90rpx;
        vertical-align: top;
        display: inline-block;
    }
    .shoppingCart-icon-select {
        margin: 20rpx 10rpx 20rpx 0;
    }
}

.shoppingCart-settle-price {
    padding-top: 15rpx;
    padding-bottom: 20rpx;
    margin-left: 35rpx;
    vertical-align: top;
    display: inline-block;
}

.price-total {
    font-size: 26rpx;
    line-height: 30rpx;
    text {
        color: #f5333f;
    }
}

.price-freight {
    color: #999999;
    font-size: 18rpx;
    line-height: 30rpx;
}

.shoppingCart-settle-btn {
    width: 260rpx;
    height: 90rpx;
    font-size: 32rpx;
    line-height: 90rpx;
    text-align: center;
    color: #ffffff;
    background: #f5333f;
    vertical-align: top;
    float: right;
}
</style>
<template>
    <view class="container">
        <navBar navTitle="放心优选"></navBar>
        <view wx:if="{{product.length > 0}}" class="shoppingCart-content">
            <image src="/icons/address-bg.png" class="shoppingCart-header" />
                <view class="shoppingCart-block shoppingCart-shop">
                    <image src="/icons/position.png" class="shoppingCart-icon-position" />
                        <text class="shop-name">{{shopChoose}}</text>
                </view>
                <view class="shoppingCart-block shoppingCart-product">
                    <view class="shoppingCart-item shoppingCart-product-manage">
                        <view class="shoppingCart-product-selectAll">
                            <image src="/icons/select-{{chooseAll == true?'yes':'no'}}.png" class="shoppingCart-icon-select" @tap="chooseAll" />
                                <text>全选</text>
                        </view>
                        <view class="shoppingCart-product-tip">
                            <text>满{{discount.count}}减{{discount.minus}}</text>
                            <text wx:if="{{subtotal < discount.count}}">，还差{{difference}}，去凑单</text>
                            <image src="/icons/in.png" class="icon-in" />
                        </view>
                    </view>
                    <view class="shoppingCart-product-list">
                        <repeat for="{{product}}" key="id">
                            <view class="shoppingCart-product-item" @tap="navToProduct({{item.id}})">
                                <image src="/icons/select-{{isChoosen[index] == true?'yes':'no'}}.png" class="shoppingCart-icon-select" @tap.stop="chooseProduct({{index}})" />
                                    <image src="{{item.imgUrl}}" mode="aspectFill" class="product-item-image" />
                                        <view class="product-item-content">
                                            <view class="product-item-name">{{item.name}}</view>
                                            <view class="product-item-price">￥{{item.price}}
                                                <text>￥{{item.oriPrice}}</text>
                                            </view>
                                            <view class="product-item-count">
                                                <image wx:if="{{item.count > 0}}" src="/icons/Reduce.png" class="count-reduce" @tap.stop="countMinus({{index}})" />
                                                    <text>{{item.count}}</text>
                                                    <image src="/icons/Add.png" class="count-add" @tap.stop="countPlus({{index}})" />
                                            </view>
                                        </view>
                            </view>
                        </repeat>
                    </view>
                    <view class="shoppingCart-product-subtotal">
                        <text>小计：</text>￥{{subtotal}}
                    </view>
                </view>
                <navigator url="../redPacket/redPacket" class="shoppingCart-block shoppingCart-redPacket">
                    <view class="shoppingCart-item">
                        <image src="/icons/redPacket.png" class="shoppingCart-redPacket-icon" />
                            红包
                            <image src="/icons/in.png" class="icon-in" />
                                <text class="{{redPacket.id == '' ? 'status-false' : 'status-true'}}">
                                    <block wx:if="{{redPacket.id == ''}}">请选择红包</block>
                                    <block wx:else>{{redPacket.count}}元</block>
                                </text>
                    </view>
                </navigator>
                <view class="shoppingCart-block shoppingCart-result">
                    <view class="shoppingCart-item shoppingCart-result-total">商品实付
                        <text>￥{{total}}</text>
                    </view>
                    <view class="shoppingCart-item shoppingCart-result-deliver">配送方式
                        <picker mode="selector" range="{{deliverList}}" range-key="" bindchange="bindDeliverChange" value="{{deliverList[deliver.choose]}}" class="shoppingCart-deliver-input">
                            <view class="input-picker {{deliver.choose < 0 ? 'picker-null' : ''}}">
                                <block wx:if="{{deliver.choose >= 0}}">{{deliverList[deliver.choose]}}</block>
                                <block wx:else>请选择配送方式</block>
                                <image src="/icons/in.png" class="icon-in" />
                            </view>
                        </picker>
                    </view>
                </view>
        </view>
        <view wx:else class="shoppingCart-empty">
            <image src="/icons/shoppingCart-empty.png" class="shoppingCart-empty-img" />
                <view class="shoppingCart-empty-text">购物车空空如也~</view>
        </view>
        <view class="shoppingCart-block shoppingCart-recommend">
            <view class="shoppingCart-recommend-title">推荐商品</view>
            <repeat for="{{recommend}}" key="id">
                <recommend :id.sync="item.id" :imgUrl.sync="item.imgUrl" :name.sync="item.name" :price.sync="item.price"></recommend>
            </repeat>
        </view>
        <view wx:if="{{product.length > 0}}" class="shoppingCart-settle">
            <view class="shoppingCart-settle-selectAll">
                <image src="/icons/select-{{chooseAll == true?'yes':'no'}}.png" class="shoppingCart-icon-select" @tap="chooseAll" />
                    <text>全选</text>
            </view>
            <view class="shoppingCart-settle-price">
                <view class="price-total">合计:
                    <text>￥{{priceFinal}}</text>
                </view>
                <view class="price-freight">运费￥{{deliver.freight}}</view>
            </view>
            <navigator url="../order/order" class="shoppingCart-settle-btn">去结算</navigator>
        </view>
    </view>
</template>

<script>
import wepy from 'wepy';
import NavBar from '@/components/navBar';
import Recommend from '@/components/recommendBlock';

export default class ShoppingCart extends wepy.page {
    components = {
        navBar: NavBar,
        recommend: Recommend
    };

    data = {
        shopChoose: '春树馆街小区',
        discount: {
            count: 120,
            minus: 20
        },
        subtotal: 0,
        total: 0,
        deliverList: ['到店自提', '送货上门'],
        deliver: {
            choose: -1,
            freight: 0
        },
        isChoosen: [],
        chooseAll: true,
        product: [
            {
                id: '000001',
                name: '韩国制造，花洒替代品',
                imgUrl: '',
                price: 39.22,
                oriPrice: 75,
                count: 2
            },
            {
                id: '00002',
                name: '随便阅读灯',
                imgUrl: '',
                price: 45.0,
                oriPrice: 99,
                count: 2
            }
        ],
        redPacket: {
            id: '',
            count: 5
        },
        recommend: [
            {
                id: '000001',
                name: '韩国制造，花洒替代品',
                price: 39.2,
                imgUrl: ''
            },
            {
                id: '000002',
                name: '韩国制造，花洒替代品',
                price: 39.2,
                imgUrl: ''
            },
            {
                id: '000003',
                name: '韩国制造，花洒替代品',
                price: 39.2,
                imgUrl: ''
            },
            {
                id: '000004',
                name: '韩国制造，花洒替代品',
                price: 39.2,
                imgUrl: ''
            }
        ]
    };

    computed = {
        total() {
            if (this.subtotal <= this.redPacket.count) return 0;
            var self = this;
            var subtotal = self.subtotal * 100;
            var redPacket = self.redPacket.count * 100;
            var discount = self.discount.minus * 100;
            var total = subtotal - redPacket;
            if (self.subtotal >= self.discount.count) {
                total = total - discount;
            }
            total = parseInt(total, 10);
            return total / 100;
        },

        priceFinal() {
            var total = this.total * 100;
            var freight = this.deliver.freight * 100;
            var priceFinal = total - freight;
            priceFinal = parseInt(priceFinal, 10);
            return priceFinal / 100;
        },

        difference() {
            var dif = this.discount.count * 100 - this.subtotal * 100;
            dif = parseInt(dif, 10);
            return dif / 100;
        }
    };

    methods = {
        navToProduct(product, event) {
            wx.navigateTo({
                url: '/pages/product/product?id=' + product
            });
        },

        countMinus(index, event) {
            var self = this;
            var subtotal = self.subtotal * 1000;
            self.product[index].count--;
            if (self.isChoosen[index]) {
                subtotal -= self.product[index].price * 1000;
            }
            subtotal = parseInt(subtotal, 10);
            self.subtotal = subtotal / 1000;
            if(self.product[index].count == 0){
                self.product.splice(index, 1);
            }
            self.$apply();
        },

        countPlus(index, event) {
            var self = this;
            var subtotal = self.subtotal * 1000;
            self.product[index].count++;
            if (self.isChoosen[index]) {
                subtotal += self.product[index].price * 1000;
            }
            subtotal = parseInt(subtotal, 10);
            self.subtotal = subtotal / 1000;
            self.$apply();
        },

        chooseProduct(index, event) {
            this.isChoosen[index] = !this.isChoosen[index];
            if (this.product[index].count > 0) {
                this.updateTotal();
            }
            this.$apply();
        },

        chooseAll() {
            var self = this;
            self.chooseAll = !self.chooseAll;
            self.isChoosen = [];
            self.product.forEach(element => {
                self.isChoosen.push(self.chooseAll);
                self.$apply();
            });
            self.updateTotal();
            self.$apply();
        },

        bindDeliverChange(e) {
            this.deliver.choose = e.detail.value;
            this.$apply();
        }
    };

    updateTotal() {
        var self = this;
        self.subtotal = 0;
        self.product.forEach((item, index) => {
            if (self.isChoosen[index]) {
                self.subtotal += item.price * item.count * 1000;
                self.$apply();
            }
        });
        self.subtotal = parseInt(self.subtotal, 10);
        self.subtotal /= 1000;
        self.$apply();
    }

    events = {};

    onLoad(option) {
        var self = this;
        self.product.forEach(element => {
            self.isChoosen.push(true);
            self.$apply();
        });
        self.updateTotal();
        self.total = self.subtotal;
        self.$apply();
    }
}
</script>
