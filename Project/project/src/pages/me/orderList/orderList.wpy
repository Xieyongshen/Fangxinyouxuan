<style lang="less">
.orderList-type {
    width: 750rpx;
    height: 65rpx;
    background: #ffffff;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    overflow: scroll;
}

.orderList-type-content {
    white-space: nowrap;
    overflow: scroll;
}

.orderList-type-item {
    width: 160rpx;
    height: 65rpx;
    padding: 0 30rpx;
    box-sizing: border-box;
    display: inline-block;
    text {
        width: 100rpx;
        height: 65rpx;
        font-size: 26rpx;
        line-height: 65rpx;
        text-align: center;
        white-space: nowrap;
        display: inline-block;
    }
}

.orderList-type-item:not(:last-child) {
    margin-right: 10rpx;
}

.orderList-item {
    width: 750rpx;
    margin-top: 20rpx;
    box-sizing: border-box;
    background: #ffffff;
    position: relative;
}

.orderList-item-type {
    width: 750rpx;
    height: 90rpx;
    font-size: 28rpx;
    line-height: 90rpx;
    padding: 0 30rpx;
    box-sizing: border-box;
    border-bottom: 1rpx solid #f2f2f2;
    text {
        height: 90rpx;
        font-size: 28rpx;
        line-height: 90rpx;
        box-sizing: border-box;
        float: right;
    }
}

.orderList-item-list {
    width: 750rpx;
    height: 160rpx;
    padding: 20rpx 0 20rpx 30rpx;
    box-sizing: border-box;
    border-bottom: 1rpx solid #f2f2f2;
    white-space: nowrap;
}

.orderList-productAll-label {
    width: 80rpx;
    height: 30rpx;
    font-size: 22rpx;
    line-height: 30rpx;
    text-align: center;
    color: #ffffff;
    background: #e87573;
    border-radius: 0 5rpx 5rpx 0;
    display: inline-block;
    position: absolute;
    left: 0;
    top: 100rpx;
    z-index: 50;
}

.orderList-product {
    display: inline-block;
    position: relative;
}

.orderList-product-img {
    width: 120rpx;
    height: 120rpx;
    margin-right: 20rpx;
    border-radius: 10rpx;
    background: #fdedeb;
}

.orderList-item-status {
    width: 750rpx;
    height: 110rpx;
    padding: 0 30rpx;
    box-sizing: border-box;
    border-bottom: 1rpx solid #f2f2f2;
}

.status-label {
    width: 75rpx;
    height: 110rpx;
    text-align: center;
    margin-right: 40rpx;
    padding: 15rpx 0;
    box-sizing: border-box;
    display: inline-block;
}

.status-icon {
    width: 45rpx;
    height: 45rpx;
    border-radius: 50%;
    margin: 0 15rpx;
}

.status-text {
    font-size: 24rpx;
    line-height: 25rpx;
}

.orderList-item-total {
    font-size: 28rpx;
    line-height: 110rpx;
    float: right;
}

.orderList-item-operation {
    width: 750rpx;
    height: 85rpx;
    color: #999999;
    font-size: 26rpx;
    line-height: 85rpx;
    padding: 0 30rpx;
    box-sizing: border-box;
}

.operation-btn {
    width: 144rpx;
    height: 62rpx;
    font-size: 24rpx;
    line-height: 60rpx;
    text-align: center;
    margin: 11rpx 0;
    margin-left: 30rpx;
    border: 2rpx solid #cccccc;
    border-radius: 4rpx;
    box-sizing: border-box;
    float: right;
}
</style>
<template>
    <view class="container" style="padding-top:{{isIphoneX ? '87px' : '62px'}}">
        <navBar navTitle="全部订单" isChildPage="y" />
        <view class="orderList-type">
            <scroll-view scroll-x scroll-into-view="{{orderType[curType].id}}" scroll-with-animation="true" class="orderList-type-content">
                <repeat for="{{orderType}}" key="index">
                    <view id="{{item.id}}" class="orderList-type-item" @tap="chooseType({{index}})">
                        <text style="{{index == curType ? 'color:' + color.red + ';border-bottom: 4rpx solid ' + color.red + ';' : ''}}">{{item.name}}</text>
                    </view>
                </repeat>
            </scroll-view>
        </view>
        <view wx:if="{{hasUserInfo === false}}">
            <login :hasUserInfo.sync="hasUserInfo" />
        </view>
        <view wx:else class="orderList-content">
            <repeat for="{{orderList}}" key="id">
                <view wx:if="{{curType == 0 || (curType == item.status + 1)}}" class="orderList-item">
                    <view class="orderList-item-type">
                        {{item.createTime}}
                        <text wx:if="{{item.status == 1}}" style="color:{{color.red}}">拼团中</text>
                        <text wx:else style="color:{{color.red}}">{{item.deliverTime}}</text>
                    </view>
                    <view wx:if="{{item.type == 1}}" class="orderList-productAll-label">拼团中</view>
                    <view wx:if="{{item.type == 4}}" class="orderList-productAll-label">预售款</view>
                    <scroll-view scroll-x class="orderList-item-list" @tap="toOrderDetail({{item.id}}, {{item.status}})">
                        <repeat for="{{item.product}}" key="type" item="product" index="proType">
                            <view class="orderList-product">
                                <image src="{{product.imgUrl}}" mode="aspectFill" class="orderList-product-img" />
                            </view>
                        </repeat>
                    </scroll-view>
                    <view class="orderList-item-status">
                        <view wx:if="{{item.status == 0}}" class="status-label">
                            <image src="/icons/pay.png" class="status-icon" />
                            <view class="status-text">未支付</view>
                        </view>
                        <view wx:if="{{item.status > 0}}" class="status-label">
                            <image src="/icons/pay.png" class="status-icon" />
                            <view class="status-text">已支付</view>
                        </view>
                        <view wx:if="{{item.status > 2}}" class="status-label">
                            <image src="/icons/deliver.png" class="status-icon" />
                            <view class="status-text">配送中</view>
                        </view>
                        <view wx:if="{{item.status > 3}}" class="status-label">
                            <image src="/icons/received.png" class="status-icon" />
                            <view class="status-text">已签收</view>
                        </view>
                        <view class="orderList-item-total" style="color:{{color.red}}">￥{{item.total}}</view>
                    </view>
                    <view class="orderList-item-operation">
                        <block wx:if="{{item.status == 1}}">如未成功自动退款</block>
                        <view wx:if="{{item.status == 0}}" class="operation-btn" style="color:{{color.red}};border: 2rpx solid {{color.red}};" @tap.stop="payNow({{item.id}})">去支付</view>
                        <view wx:if="{{item.status > 0}}" class="operation-btn btn-major">发红包</view>
                        <view class="operation-btn" @tap="toOrderDetail({{item.id}}, {{item.status}})">查看详情</view>
                        <view wx:if="{{item.status == 4}}" class="operation-btn">退款中</view>
                        <view wx:if="{{item.status == 2 || item.status == 3 || item.status == 5}}" class="operation-btn" @tap="toOrderRefund({{item.id}})">申请退款</view>
                    </view>
                </view>
            </repeat>
        </view>
    </view>
</template>

<script>
import wepy from 'wepy';
import NavBar from '@/components/navBar';
import LogIn from '@/components/logIn';
import api from '@/api/api';

export default class OrderList extends wepy.page {
    components = {
        navBar: NavBar,
        login: LogIn
    };
    data = {
        orderType: [
            {
                name: '全部订单',
                id: 'type0'
            },
            {
                name: '待付款',
                id: 'type1'
            },
            {
                name: '待成团',
                id: 'type2'
            },
            {
                name: '待发货',
                id: 'type3'
            },
            {
                name: '待收货',
                id: 'type4'
            },
            {
                name: '售后中',
                id: 'type5'
            },
            {
                name: '已完成',
                id: 'type6'
            }
        ],
        //订单状态：待付款0，待成团1，待发货2，发货中（待收货）3, 售后中4, 已完成5
        curType: 0,
        orderList: [],
        hasUserInfo: false,
        isIphoneX: false,
        color: {}
    };

    computed = {};

    methods = {
        chooseType(index, e) {
            this.curType = index;
            this.$apply();
        },

        toOrderDetail(id, e) {
            wx.navigateTo({
                url: '../orderDetail/orderDetail?id=' + id
            });
        },

        toOrderRefund(id, e) {
            var self = this;
            wx.showModal({
                title: '申请退款',
                content: '确认申请退款吗？',
                success: function(res) {
                    if (res.confirm) {
                        wx.navigateTo({
                            url: '../orderDetail/orderDetail?status=4&id=' + id
                        });
                        self.$apply();
                    } else if (res.cancel) {
                        console.log('refund cancel');
                    }
                }
            });
        },

        payNow(id, events) {
            console.log(id);
            this.gotoPay(id);
        }
    };

    events = {};

    async gotoPay(id) {
        let self = this;
        wx.showLoading({
            title: '发起支付'
        });
        var jwt = wx.getStorageSync('jwt');
        try {
            if (jwt.data.access_token != null) {
                let res = await api.gotoPay({
                    query: JSON.stringify({
                        access_token: jwt.data.access_token,
                        account_id: jwt.data.account_id,
                        orderId: id
                    }),
                    method: 'POST',
                    header: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    }
                });
                wx.hideLoading();
                console.log(res);

                wx.requestPayment({
                    timeStamp: res.data.timeStamp,
                    nonceStr: res.data.nonceStr,
                    package: res.data.prepay_id,
                    signType: 'MD5',
                    paySign: res.data.paySign,
                    success: async function(res1) {
                        console.log('支付成功');
                        console.log(res1);
                        let res_data = await api.finishPay({
                            query: JSON.stringify({
                                orderId: res.data.newOrderId
                            }),
                            method: 'POST',
                            header: {
                                'Content-Type':
                                    'application/x-www-form-urlencoded'
                            }
                        });
                        wx.showToast({
                            title: '支付成功！',
                            image: '/icons/select-yes.png',
                            duration: 1000
                        });
                        self.getOrderList();
                    },
                    fail: function(res1) {
                        console.log(res1);
                        console.log('支付失败');
                        var errMsg = '';
                        if (res1.errMsg == 'requestPayment:fail cancel') {
                            errMsg = '支付取消！';
                        } else {
                            errMsg = '支付失败！';
                        }
                        wx.showToast({
                            title: errMsg,
                            image: '/icons/cancel.png',
                            duration: 1000
                        });
                    },
                    complete: function(res1) {}
                });
                self.$apply();
            }
        } catch (error) {
            console.log(error);
        }
    }

    async getOrderList() {
        wx.showLoading({
            title: '订单加载中'
        });
        var jwt = wx.getStorageSync('jwt');
        let self = this;
        try {
            if (jwt.data.access_token != null) {
                let res = await api.getOrderList({
                    query: {
                        access_token: jwt.data.access_token,
                        account_id: jwt.data.account_id
                    }
                });
                console.log(res);
                self.orderList = res.data;
                self.$apply();
            }
        } catch (error) {
            console.log('jwt is null');
        }
        wx.hideLoading();
    }

    onShow(){
        this.getOrderList();
    }

    onLoad(options) {
        var self = this;
        self.curType = options.index;
        self.color = self.$parent.globalData.color;
        self.isIphoneX = self.$parent.globalData.isIphoneX;
        self.hasUserInfo = self.$parent.globalData.hasUserInfo;
        self.getOrderList();
        self.$apply();
    }
}
</script>
