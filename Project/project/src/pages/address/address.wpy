<style lang="less">
.address-content {
    width: 750rpx;
    padding: 0 30rpx;
    box-sizing: border-box;
    background: #ffffff;
}

.address-item {
    width: 690rpx;
    padding: 25rpx 0;
}

.address-item:not(:last-child) {
    border-bottom: 1rpx solid #f2f2f2;
}

.address-detail {
    width: 630rpx;
    font-size: 28rpx;
    line-height: 40rpx;
    display: inline-block;
}

.address-edit {
    width: 60rpx;
    height: 80rpx;
    padding: 25rpx 0;
    vertical-align: top;
    box-sizing: border-box;
    display: inline-block;
}

.address-edit-img {
    width: 30rpx;
    height: 30rpx;
    margin: 0;
    float: right;
}

.address-add {
    width: 690rpx;
    height: 88rpx;
    margin: 30rpx;
    color: #ffffff;
    font-size: 32rpx;
    line-height: 88rpx;
    text-align: center;
    border-radius: 10rpx;
}
</style>
<template>
    <view class="container">
        <navBar navTitle="我的地址" isChildPage="y"></navBar>
        <view class="address-content">
            <repeat for="{{address}}" key="index">
                <view class="address-item" @tap="chooseAddress({{item.id}}, {{item.name}}, {{item.phone}}, {{item.desc}})">
                    <view class="address-detail">
                        <view>{{item.name}} {{item.phone}}</view>
                        <view>{{item.desc}}</view>
                    </view>
                    <view class="address-edit" @tap.stop="addressEdit">
                        <image src="/icons/edit.png" class="address-edit-img" />
                    </view>
                </view>
            </repeat>
        </view>
        <view class="address-add" style="background:{{color.red}}" @tap="addressAdd">新增收货地址</view>
    </view>
</template>

<script>
import wepy from 'wepy';
import NavBar from '@/components/navBar';
import api from '@/api/api';

export default class Address extends wepy.page {
    components = {
        navBar: NavBar
    };

    data = {
        address: [],
        color: {}
    };

    methods = {
        addressAdd() {
            wx.navigateTo({
                url: 'addressChange/addressChange?type=0'
            });
        },

        addressEdit() {
            wx.navigateTo({
                url: 'addressChange/addressChange?type=1'
            });
        },

        chooseAddress(id, name, phone, desc, e) {
            wx.setStorage({
                key: 'address',
                data: {
                    id: id,
                    name: name,
                    phone: phone,
                    desc: desc
                }
            });

            wx.navigateBack({
                delta: 1
            });
        }
    };

    events = {};

    async onLoad() {
        var jwt = wx.getStorageSync('jwt');
        let self = this;

        if (jwt.data.access_token != null) {
            let res = await api.getUserAddress({
                query: {
                    access_token: jwt.data.access_token,
                    account_id: jwt.data.account_id
                }
            });

            console.log(res);
            self.address = res.data;
        }
        self.color = self.$parent.globalData.color;
        self.$apply();
    }
}
</script>
