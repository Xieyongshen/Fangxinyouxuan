<style lang="less">
page {
    padding-bottom: 90rpx;
}

.product-image {
    width: 750rpx;
    height: 400rpx;
    position: relative;
}

.product-image-scroll,
.product-image-item,
.product-image-img {
    width: 750rpx;
    height: 400rpx;
    background: #ffffff;
}

.product-image-index {
    width: 55rpx;
    height: 55rpx;
    font-size: 24rpx;
    line-height: 55rpx;
    text-align: center;
    border-radius: 50%;
    background: rgba(0, 0, 0, 0.1);
    position: absolute;
    right: 30rpx;
    bottom: 15rpx;
}

.product-intro {
    width: 750rpx;
    padding: 15rpx 25rpx 30rpx 25rpx;
    box-sizing: border-box;
    background: #ffffff;
    position: relative;
}

.product-intro-share {
    height: 30rpx;
    margin: 0;
    padding: 0;
    background: transparent;
    box-sizing: border-box;
    position: absolute;
    right: 30rpx;
    top: 25rpx;
    text {
        height: 30rpx;
        font-size: 26rpx;
        line-height: 30rpx;
        display: inline-block;
        vertical-align: top;
    }
}

.product-intro-share::after {
    border: none;
}

.product-icon-share {
    width: 30rpx;
    height: 30rpx;
    margin-right: 10rpx;
    vertical-align: top;
}

.product-intro-name {
    font-size: 36rpx;
    line-height: 45rpx;
}

.product-intro-desc {
    color: #808080;
    font-size: 26rpx;
    line-height: 35rpx;
    margin-bottom: 30rpx;
}

.product-intro-oriPrice {
    font-size: 26rpx;
    line-height: 35rpx;
}

.product-intro-price {
    font-size: 32rpx;
    line-height: 45rpx;
    vertical-align: top;
    display: inline-block;
}

.product-intro-soldCount {
    color: #bfbfbf;
    font-size: 26rpx;
    line-height: 45rpx;
    margin-left: 15rpx;
    vertical-align: top;
    display: inline-block;
}

.product-intro-label {
    font-size: 22rpx;
    line-height: 30rpx;
    margin-top: 25rpx;
}

.label-text {
    height: 30rpx;
    margin-right: 40rpx;
    display: inline-block;
    text {
        height: 30rpx;
        vertical-align: top;
        display: inline-block;
    }
}

.label-mark {
    width: 8rpx;
    height: 8rpx;
    margin: 11rpx 10rpx 11rpx 0;
    border-radius: 50%;
    background: #000000;
    display: inline-block;
}

.product-intro-info {
    color: #999999;
    font-size: 26rpx;
    line-height: 45rpx;
    margin-top: 20rpx;
    view {
        margin-right: 30rpx;
        display: inline-block;
    }
}

.product-group {
    width: 750rpx;
    margin-top: 20rpx;
    padding-left: 30rpx;
    box-sizing: border-box;
    background: #ffffff;
}

.product-group-title {
    width: 720rpx;
    height: 90rpx;
    font-size: 26rpx;
    line-height: 90rpx;
    padding-right: 30rpx;
    box-sizing: border-box;
    background: #ffffff;
}

.product-group-item {
    width: 720rpx;
    height: 100rpx;
    padding: 20rpx 30rpx 20rpx 0;
    box-sizing: border-box;
    border-top: 1rpx solid #e3e3e3;
}

.product-group-avatar {
    width: 60rpx;
    height: 60rpx;
    border-radius: 50%;
    background: #fdedeb;
}

.product-group-content {
    width: 510rpx;
    height: 60rpx;
    margin-left: 20rpx;
    display: inline-block;
    vertical-align: top;
}

.product-group-head {
    height: 35rpx;
    font-size: 26rpx;
    line-height: 35rpx;
}

.product-group-time {
    height: 25rpx;
    color: #999999;
    font-size: 20rpx;
    line-height: 25rpx;
}

.product-group-btn {
    width: 100rpx;
    height: 40rpx;
    margin: 10rpx 0;
    color: #ffffff;
    font-size: 24rpx;
    line-height: 40rpx;
    text-align: center;
    border-radius: 20rpx;
    float: right;
}

.product-recommend {
    margin-top: 20rpx;
    padding-top: 35rpx;
    padding-bottom: 20rpx;
    background: #ffffff;
}

.product-recommend-title {
    font-size: 34rpx;
    line-height: 45rpx;
    padding-left: 30rpx;
}

.product-recommend-content {
    width: 750rpx;
    height: 415rpx;
    margin-top: 40rpx;
    white-space: nowrap;
}

.product-recommend-item {
    width: 300rpx;
    height: 415rpx;
    padding: 0 30rpx;
    box-sizing: border-box;
    display: inline-block;
    position: relative;
}

.product-recommend-item:first-child {
    margin-left: 10rpx;
}

.product-recommend-img {
    width: 240rpx;
    height: 240rpx;
    border-radius: 10rpx;
    background: #fdedeb;
}

.product-recommend-name {
    width: 240rpx;
    margin-top: 30rpx;
    font-size: 26rpx;
    line-height: 35rpx;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.product-recommend-price {
    margin-top: 50rpx;
    font-size: 26rpx;
    line-height: 35rpx;
}

.product-recommend-cart {
    width: 50rpx;
    height: 50rpx;
    border-radius: 50%;
    position: absolute;
    bottom: 0;
    right: 30rpx;
}

.product-detail {
    margin-top: 20rpx;
    padding: 35rpx 30rpx 20rpx 30rpx;
    background: #ffffff;
}

.product-detail-title {
    font-size: 32rpx;
    line-height: 45rpx;
}

.product-detail-content {
    margin-top: 10rpx;
    color: #808080;
    font-size: 26rpx;
    line-height: 45rpx;
    image {
        width: 690rpx;
        background: #fdedeb;
        margin-top: 20rpx;
    }
}

.product-btn {
    width: 750rpx;
    height: 90rpx;
    background: #ffffff;
    position: fixed;
    bottom: 0;
    z-index: 99;
}

.product-empty {
    width: 750rpx;
    height: 90rpx;
    color: #ffffff;
    font-size: 32rpx;
    line-height: 90rpx;
    text-align: center;
}

.product-btn-separate,
.product-btn-group {
    width: 375rpx;
    height: 90rpx;
    color: #ffffff;
    font-size: 32rpx;
    line-height: 90rpx;
    text-align: center;
    vertical-align: top;
    display: inline-block;
}

.product-btn-shoppingCart {
    width: 150rpx;
    height: 90rpx;
    background: #ffffff;
    text-align: center;
    padding-top: 10rpx;
    box-sizing: border-box;
    display: inline-block;
    text {
        font-size: 24rpx;
        line-height: 30rpx;
        display: block;
    }
}

.product-btn-cart {
    width: 45rpx;
    height: 40rpx;
}

.product-btn-addToCart,
.product-btn-purchase {
    width: 300rpx;
    height: 90rpx;
    color: #ffffff;
    font-size: 32rpx;
    line-height: 90rpx;
    text-align: center;
    vertical-align: top;
    display: inline-block;
}

.product-btn-separate,
.product-btn-addToCart {
    background: #ff6670;
}

.product-select {
    width: 750rpx;
    height: 100vh;
    position: fixed;
    top: 0;
    z-index: 99;
    background: rgba(0, 0, 0, 0.1);
}

.product-select-container {
    width: 750rpx;
    padding-top: 30rpx;
    background: #ffffff;
    box-sizing: border-box;
    position: absolute;
    bottom: 0;
}

.product-select-close {
    width: 80rpx;
    height: 80rpx;
    font-size: 60rpx;
    font-weight: 900;
    line-height: 80rpx;
    text-align: center;
    background: #ffffff;
    border-radius: 50%;
    position: absolute;
    top: -40rpx;
    right: 60rpx;
}

.product-select-content {
    max-height: 80vh;
    overflow: scroll;
}

.product-select-img {
    width: 160rpx;
    height: 160rpx;
    margin: 30rpx 30rpx 0 30rpx;
    vertical-align: top;
}

.product-select-info {
    width: 500rpx;
    height: 160rpx;
    margin: 30rpx 30rpx 0 0;
    vertical-align: top;
    display: inline-block;
}

.product-select-name {
    width: 500rpx;
    height: 45rpx;
    color: #999999;
    font-size: 28rpx;
    line-height: 45rpx;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    margin-bottom: 60rpx;
}

.product-select-price {
    font-size: 28rpx;
    line-height: 40rpx;
    vertical-align: top;
    display: inline-block;
}

.product-select-remain {
    font-size: 28rpx;
    line-height: 40rpx;
    margin-right: 30rpx;
    float: right;
}

.product-select-spec {
    width: 750rpx;
    margin-top: 45rpx;
    padding: 0 30rpx;
}

.product-spec-title {
    font-size: 28rpx;
    line-height: 50rpx;
    vertical-align: top;
    display: inline-block;
}

.product-spec-content {
    display: inline-block;
}

.product-spec-item {
    height: 64rpx;
    font-size: 28rpx;
    line-height: 60rpx;
    margin-left: 20rpx;
    padding: 0 50rpx;
    border: 2rpx solid #cccccc;
    display: inline-block;
}

.product-select-count {
    width: 750rpx;
    margin-top: 35rpx;
    padding: 0 30rpx;
    text-align: right;
    text {
        font-size: 28rpx;
        line-height: 64rpx;
        margin-right: 40rpx;
        display: inline-block;
    }
}

.product-count-choose {
    height: 64rpx;
    display: inline-block;
}

.product-count-reduce,
.product-count-current,
.product-count-add {
    width: 60rpx;
    height: 60rpx;
    font-size: 28rpx;
    line-height: 60rpx;
    text-align: center;
    border: 2rpx solid #cccccc;
    box-sizing: content-box;
    display: inline-block;
}

.product-count-current,
.product-count-add {
    border-left: none;
}

.product-select-buy {
    width: 750rpx;
    height: 100rpx;
    color: #ffffff;
    font-size: 32rpx;
    line-height: 100rpx;
    text-align: center;
    margin: 20rpx 0;
}
</style>
<template>
    <view class="container" style="padding-top:{{isIphoneX ? '87px' : '62px'}}">
        <navBar navTitle="商品详情" isChildPage="y" :isIphoneX.sync="isIphoneX"></navBar>
        <view class="product-image">
            <swiper circular="true" class="product-image-scroll" bindchange="imageChange">
                <repeat for="{{imageShow}}" key="index">
                    <swiper-item class="product-image-item">
                        <image mode="aspectFill" src="{{item}}" mode="aspectFill" class="product-image-img" @tap="picPreview({{item}}, 1)" />
                    </swiper-item>
                </repeat>
            </swiper>
            <view class="product-image-index">{{curImage + 1}}/{{imageShow.length}}</view>
        </view>
        <view class="product-intro">
            <button open-type="share" hover-class="none" class="product-intro-share">
                <image src="/icons/share.png" class="product-icon-share" />
                <text>分享</text>
            </button>
            <view class="product-intro-name">{{product.name}}</view>
            <view class="product-intro-desc">{{product.desc}}</view>
            <view class="product-intro-oriPrice" style="color:{{color.red}}">￥{{product.type == 2 ? product.oriPrice : product.price}}</view>
            <view class="product-intro-price" style="color:{{color.yellow}}">￥{{priceShow}}</view>
            <view class="product-intro-soldCount">已售{{product.soldCount}}份</view>
            <view class="product-intro-label">
                <repeat for="{{product.label}}" key="index">
                    <view class="label-text">
                        <view class="label-mark"></view>
                        <text>{{item}}</text>
                    </view>
                </repeat>
                <view wx:if="{{product.type == 4}}" class="label-text">
                    <view class="label-mark"></view>
                    <text wx:if="{{product.reachTime != ''}}">预计到货时间：{{product.reachTime}}</text>
                    <text wx:else>已到货</text>
                </view>
            </view>
            <view class="product-intro-info">
                <view>规格：
                    <repeat for="{{product.spec}}" key="index">{{index > 0 ? ' / ' : ''}}{{item.name}}</repeat>
                </view>
                <view wx:if="{{product.producer != ''}}">产地：{{product.producer}}</view>
            </view>
        </view>
        <view wx:if="{{product.type == 2}}" class="product-group">
            <view class="product-group-title">已有{{product.group.list.length}}人在开团，可直接参与</view>
            <repeat for="{{product.group.list}}" key="index">
                <view class="product-group-item">
                    <image src="{{item.head.avatar}}" class="product-group-avatar" />
                    <view class="product-group-content">
                        <view class="product-group-head">{{item.head.name}}</view>
                        <view class="product-group-time">还差{{item.reachCount - item.count}}人成团，剩余 {{restTimeList[index].hour}}:{{restTimeList[index].minute}}:{{restTimeList[index].second}} 结束</view>
                    </view>
                    <view class="product-group-btn" style="background:{{color.red}}" @tap="buyNow({{product.type}})">去参团</view>
                </view>
            </repeat>
        </view>
        <view class="product-detail">
            <view class="product-detail-title">详情</view>
            <view class="product-detail-content">
                <view>{{product.detail}}</view>
                <repeat for="{{imageDetail}}">
                    <image mode="widthFix" src="{{item}}" @tap="picPreview({{item}}, 2)" />
                </repeat>
            </view>
        </view>
        <view class="product-recommend">
            <view class="product-recommend-title">推荐搭配商品</view>
            <scroll-view scroll-x="true" class="product-recommend-content">
                <repeat for="{{product.recommend}}" key="id">
                    <view class="product-recommend-item" @tap="navToProduct({{item.id}})">
                        <image src="{{item.imgUrl}}" class="product-recommend-img" />
                        <view class="product-recommend-name">{{item.name}}</view>
                        <view class="product-recommend-price">￥{{item.price}}</view>
                        <image src="/icons/cart-recommend.png" class="product-recommend-cart" @tap.stop="chooseRecommendSpec({{index}})" />
                    </view>
                </repeat>
            </scroll-view>
        </view>
        <view class="product-btn">
            <block wx:if="{{product.remain == 0}}">
                <view class="product-empty" style="background:{{color.red}}">已售罄</view>
            </block>
            <block wx:elif="{{product.type == 2}}">
                <view class="product-btn-separate" @tap="buyNow(0)">单独购买 ￥{{product.price}}</view>
                <view class="product-btn-group" style="background:{{color.red}}" @tap="buyNow({{product.type}})">拼单购 ￥{{product.group.price}}</view>
            </block>
            <block wx:else>
                <view class="product-btn-shoppingCart" @tap="navToShoppingCart()">
                    <image src="/icons/shoppingCart.png" class="product-btn-cart" />
                    <text>购物车</text>
                </view>
                <view hover-class="navigator-hover" class="product-btn-addToCart" @tap="chooseSpec(0)">加入购物车</view>
                <view hover-class="navigator-hover" class="product-btn-purchase" style="background:{{color.red}}" @tap="chooseSpec(1)">立即购买</view>
            </block>
        </view>
        <view wx:if="{{isChoosing}}" class="product-select" @tap="selectClose()">
            <view class="product-select-container" @tap.stop="selectContent()">
                <view class="product-select-close" @tap.stop="selectClose()">×</view>
                <view class="product-select-content">
                    <image mode="aspectFill" src="{{operation == 2 ? curProduct.imgUrl : imageCover}}" class="product-select-img" />
                    <view class="product-select-info">
                        <view class="product-select-name">{{operation == 2 ? curProduct.name : product.name}}</view>
                        <view class="product-select-price" style="color:{{color.red}}">￥{{curPrice}}</view>
                        <view class="product-select-remain">库存：{{operation == 2 ? curProduct.remain : product.remain}}</view>
                    </view>
                    <view class="product-select-spec">
                        <view class="product-spec-title">规格：</view>
                        <view class="product-spec-content">
                            <repeat for="{{operation == 2 ? curProduct.spec : product.spec}}" key="index">
                                <view class="product-spec-item" style="{{index == specChoose? 'color:' + color.red + ';border: 2rpx solid ' + color.red + ';' : ''}}" @tap="specChoose({{index}})">{{item.name}}</view>
                            </repeat>
                        </view>
                    </view>
                    <view class="product-select-count">
                        <text>数量：</text>
                        <view class="product-count-choose">
                            <view class="product-count-reduce" style="{{count > 1 ? 'color:' + color.red + ';' : ''}}" @tap="countMinus">-</view>
                            <view class="product-count-current" style="color:{{color.red}};">{{count}}</view>
                            <view class="product-count-add" style="{{count < product.remain ? 'color:' + color.red + ';' : ''}}" @tap="countPlus">+</view>
                        </view>
                    </view>
                    <view wx:if="{{operation != 1}}" hover-class="navigator-hover" class="product-select-buy" style="background:{{color.red}}" @tap="addToCart">加入购物车</view>
                    <view wx:else hover-class="navigator-hover" class="product-select-buy" style="background:{{color.red}}" @tap="buyNow({{product.type}})">立即购买</view>
                </view>
            </view>
        </view>
    </view>
</template>

<script>
import wepy from 'wepy';
import NavBar from '@/components/navBar';
import api from '@/api/api';

export default class Product extends wepy.page {
    components = {
        navBar: NavBar
    };

    data = {
        curImage: 0,
        isChoosing: false,
        curProduct: {},
        specChoose: 0,
        count: 1,
        productID: '',
        product: {
            label: {
                name: '',
                price: 0
            },
            preSale: {
                reachTime: 0,
                label: ['']
            },
            spec: [
                {
                    name: '',
                    price: 0
                },
                {
                    name: '',
                    price: 0
                }
            ],
            group: {
                price: 0,
                count: 0,
                list: [
                    {
                        head: {
                            name: '',
                            avatar: ''
                        },
                        count: 0
                    }
                ]
            }
        },
        imageCover: '',
        imageShow: [],
        imageDetail: [],
        priceShow: 0,
        restTimeList: [],
        operation: 0,
        isIphoneX: false,
        color: {}
    };

    computed = {
        curPrice() {
            var price = 0;
            if (this.operation == 0 || this.operation == 1) {
                price = this.product.spec[this.specChoose].price;
            } else if (this.operation == 2) {
                price = this.curProduct.spec[this.specChoose].price;
            }
            return price;
        }
    };

    methods = {
        imageChange(e) {
            this.curImage = e.detail.current;
            this.$apply();
        },

        navToProduct(product, event) {
            wx.redirectTo({
                url: '/pages/product/product?id=' + product
            });
        },

        navToShoppingCart() {
            wx.switchTab({
                url: '/pages/shoppingCart/shoppingCart'
            });
        },

        buyNow(type) {
            var self = this;
            var orderProduct = [];
            var curProduct = {
                id: self.productID,
                name: self.product.name,
                image: self.imageCover,
                spec: self.product.spec[self.specChoose].name,
                price: self.product.spec[self.specChoose].price,
                count: self.count
            };
            if (type == 0) {
                curProduct.price = self.product.price;
            }
            orderProduct.push(curProduct);
            wx.setStorageSync('orderProduct', orderProduct);
            wx.navigateTo({
                url: '/pages/order/order?type=' + type
            });
        },

        picPreview(url, type, e) {
            var imageList = [];
            if (type == 1) {
                imageList = this.imageShow;
            } else if (type == 2) {
                imageList = this.imageDetail;
            }
            wx.previewImage({
                current: url,
                urls: imageList
            });
        },

        chooseRecommendSpec(index) {
            var self = this;
            self.curProduct = self.product.recommend[index];
            self.operation = 2;
            self.specChoose = 0;
            self.count = 1;
            self.isChoosing = true;
            self.$apply();
        },

        chooseSpec(ope) {
            this.operation = ope;
            this.specChoose = 0;
            this.count = 1;
            this.isChoosing = true;
            this.$apply();
        },

        addToCart() {
            var self = this;
            var shoppingCart = wx.getStorageSync('shoppingCart');
            var hasCur = false;
            var id = '';
            if (self.operation == 0) {
                id = self.productID;
            } else if (self.operation == 2) {
                id = self.curProduct.id;
            }
            if (shoppingCart.length > 0) {
                shoppingCart.forEach(element => {
                    if (element.id == id) {
                        hasCur = true;
                        element.count += self.count;
                        return;
                    }
                });
            } else {
                shoppingCart = [];
            }

            var oriPrice;

            if (hasCur == false) {
                if (self.operation == 0) {
                    shoppingCart.push({
                        id: id,
                        name: self.product.name,
                        image: self.imageCover,
                        spec: self.product.spec[self.specChoose].name,
                        price: self.product.spec[self.specChoose].price,
                        oriPrice:
                            self.product.type == 2
                                ? self.product.oriPrice
                                : self.product.price,
                        count: self.count
                    });
                } else if (self.operation == 2) {
                    shoppingCart.push({
                        id: id,
                        name: self.curProduct.name,
                        image: self.curProduct.imgUrl,
                        spec: self.curProduct.spec[self.specChoose].name,
                        price: self.curProduct.spec[self.specChoose].price,
                        oriPrice: self.curProduct.oriPrice,
                        count: self.count
                    });
                }
            }

            wx.setStorageSync('shoppingCart', shoppingCart);
            wx.showToast({
                title: '添加成功',
                icon: 'success',
                duration: 1000
            });

            this.isChoosing = false;
            this.$apply();
        },

        selectClose() {
            this.isChoosing = false;
            this.$apply();
        },

        selectContent() {
            return;
        },

        specChoose(spec, e) {
            this.specChoose = spec;
            this.$apply();
        },

        countMinus() {
            if (this.count > 1) {
                this.count--;
                this.$apply();
            }
        },

        countPlus() {
            if (this.count < this.product.remain) {
                this.count++;
                this.$apply();
            }
        }
    };

    events = {};

    timeFormat(param) {
        //小于10的格式化函数
        var format = parseInt(param);
        return format < 10 ? '0' + format : format;
    }

    countDown() {
        var self = this;
        let nowTime = new Date().getTime();
        let list = self.data.product.group.list;
        let endTimeList = [];
        let countDown = {};
        list.forEach(element => {
            element.endTime = element.endTime.replace(/\-/g, '/');
            endTimeList.push(element.endTime);
        });

        endTimeList.forEach(element => {
            let endTime = new Date(element).getTime();
            if (nowTime >= endTime) {
                countDown = {
                    hour: '00',
                    minute: '00',
                    second: '00'
                };
            } else {
                let time = (endTime - nowTime) / 1000;
                let hou = parseInt((time % (60 * 60 * 24)) / 3600);
                let min = parseInt(((time % (60 * 60 * 24)) % 3600) / 60);
                let sec = parseInt(((time % (60 * 60 * 24)) % 3600) % 60);
                countDown = {
                    hour: self.timeFormat(hou),
                    minute: self.timeFormat(min),
                    second: self.timeFormat(sec)
                };
            }
            self.restTimeList.push(countDown);
            self.$apply();
        });

        if (self.timer) {
            clearInterval(self.timer);
        }
        self.timer = setInterval(function() {
            self.restTimeList.forEach((element, index) => {
                if (element.second > 0) {
                    element.second--;
                } else if (element.minute > 0) {
                    element.second = 59;
                    element.minute--;
                } else if (element.hour > 0) {
                    element.second = 59;
                    element.minute = 59;
                    element.hour--;
                } else {
                    nowTime = new Date().getTime();
                    let endTime = new Date(endTimeList[index]).getTime();
                    if (nowTime >= endTime) {
                        clearInterval(this);
                    } else {
                        let time = (endTime - nowTime) / 1000;
                        let hou = parseInt((time % (60 * 60 * 24)) / 3600);
                        let min = parseInt(
                            ((time % (60 * 60 * 24)) % 3600) / 60
                        );
                        let sec = parseInt(
                            ((time % (60 * 60 * 24)) % 3600) % 60
                        );
                        element = {
                            hour: hou,
                            minute: min,
                            second: sec
                        };
                    }
                }
                element.hour = self.timeFormat(element.hour);
                element.minute = self.timeFormat(element.minute);
                element.second = self.timeFormat(element.second);
                self.$apply();
            });
        }, 1000);
        self.$apply();
    }

    onShareAppMessage() {
        return {
            title: '放心优选',
            path: '/pages/product/product?id=' + productID
        };
    }

    filterProductInfo() {
        var self = this;
        self.product.image.forEach(element => {
            if (element.type == 0) {
                self.imageCover = element.imgUrl;
            } else if (element.type == 1) {
                self.imageShow.push(element.imgUrl);
            } else if (element.type == 2) {
                self.imageDetail.push(element.imgUrl);
            }
        });
        if (self.product.type == 2) {
            self.priceShow = self.product.group.price;
        } else {
            self.priceShow = parseFloat(self.product.spec[0].price);
            self.product.spec.forEach((item, index) => {
                if (item.price < self.priceShow) {
                    self.priceShow = parseFloat(item.price);
                }
            });
        }
        self.$apply();
    }

    async onLoad(options) {
        let self = this;
        self.color = self.$parent.globalData.color;
        self.isIphoneX = self.$parent.globalData.isIphoneX;
        self.productID = options.id;
        let productDetail = await api.getProductDetail({
            query: {
                productId: self.productID
            }
        });
        console.log(productDetail);
        self.product = productDetail.data;

        self.filterProductInfo();
        self.$apply();
        if (self.product.type == 2 && self.product.group.list.length > 0) {
            self.countDown();
        }
    }
}
</script>
