<style lang="less">
page {
    background: #ffffff;
}

.container {
    height: 100vh;
}

.coupon-module {
    width: 750rpx;
    height: 65rpx;
    background: #ffffff;
    position: fixed;
    z-index: 90;
}

.coupon-module-item {
    width: 180rpx;
    height: 65rpx;
    box-sizing: border-box;
    display: inline-block;
    text {
        width: 180rpx;
        height: 61rpx;
        font-size: 26rpx;
        line-height: 65rpx;
        text-align: center;
        white-space: nowrap;
        display: block;
    }
}

.coupon-module-item:not(:last-child) {
    margin-right: 10rpx;
}

.coupon-module-bar {
    width: 100rpx;
    height: 4rpx;
    background: #ffffff;
    margin: 0 40rpx;
}

.coupon-content {
    width: 750rpx;
    height: 100%;
    padding-top: 65rpx;
    box-sizing: border-box;
}

.coupon-rank {
    width: 750rpx;
    height: 348rpx;
    padding: 20rpx 30rpx;
    box-sizing: border-box;
}

.coupon-rank-container {
    width: 690rpx;
    height: 308rpx;
    padding: 30rpx 0;
    box-sizing: border-box;
    border-radius: 20rpx;
    color: #ffffff;
}

.coupon-rank-title {
    font-size: 32rpx;
    line-height: 40rpx;
    text-align: center;
}

.coupon-rank-content {
    font-size: 32rpx;
    line-height: 208rpx;
    text-align: center;
}

.coupon-block {
    width: 750rpx;
    margin-top: 40rpx;
    padding-top: 20rpx;
}

.coupon-block-title {
    font-size: 32rpx;
    line-height: 35rpx;
    margin-bottom: 40rpx;
    text-align: center;
}

.coupon-limit-time {
    font-size: 24rpx;
    line-height: 44rpx;
    text-align: center;
    text {
        width: 44rpx;
        height: 44rpx;
        color: #ffffff;
        margin: 0 10rpx;
        border-radius: 50%;
        display: inline-block;
    }
}

.limit-item-time {
    width: 430rpx;
    font-size: 24rpx;
    line-height: 25rpx;
    margin-top: 50rpx;
}

.limit-item-price {
    font-size: 30rpx;
    line-height: 65rpx;
    text {
        color: #999999;
        font-size: 22rpx;
        line-height: 40rpx;
        text-decoration: line-through;
    }
}

.coupon-recommend {
    width: 690rpx;
    height: 220rpx;
    margin: 20rpx 30rpx;
    border-bottom: 1rpx solid #f2f2f2;
    position: relative;
}

.coupon-recommend-img {
    width: 690rpx;
    height: 220rpx;
    border-radius: 20rpx 20rpx 0 0;
    background: #fdedeb;
}

.coupon-recommend-update {
    width: 690rpx;
    height: 60rpx;
    padding: 10rpx;
    background: #ffffff;
    border-radius: 20rpx 20rpx 0 0;
    box-sizing: border-box;
    position: absolute;
    bottom: 0;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.coupon-recommend-avatar {
    width: 40rpx;
    height: 40rpx;
    margin-right: 20rpx;
    border-radius: 50%;
    vertical-align: top;
    background: #fdedeb;
}

.coupon-recommend-text {
    color: #999999;
    height: 40rpx;
    font-size: 20rpx;
    line-height: 40rpx;
    display: inline-block;
    vertical-align: top;
}

.group-item:first-child {
    padding-top: 0;
}

.group-item-sold {
    width: 430rpx;
    height: 45rpx;
    color: #bfbfbf;
    margin-top: 15rpx;
    padding: 5rpx 0;
    box-sizing: border-box;
    text {
        height: 35rpx;
        font-size: 20rpx;
        line-height: 35rpx;
        display: inline-block;
        vertical-align: top;
    }
}

.group-item-buyer {
    width: 35rpx;
    height: 35rpx;
    border-radius: 50%;
    margin-right: 10rpx;
    vertical-align: top;
}

.group-item-ellipsis {
    width: 35rpx;
    height: 35rpx;
    border-radius: 50%;
    margin-right: 20rpx;
    vertical-align: top;
}

.group-item-price {
    font-size: 30rpx;
    line-height: 65rpx;
    margin-top: 60rpx;
    text {
        color: #999999;
        font-size: 22rpx;
        line-height: 40rpx;
        text-decoration: line-through;
    }
}

.coupon-quetion-content,
.coupon-game-content {
    width: 750rpx;
    height: 300rpx;
    color: #ffffff;
    font-size: 32rpx;
    line-height: 300rpx;
    text-align: center;
}
.product-select {
    width: 750rpx;
    height: 100vh;
    position: fixed;
    top: 0;
    z-index: 99;
    background: rgba(0, 0, 0, 0.1);
}

.product-select-container {
    width: 750rpx;
    padding-top: 30rpx;
    background: #ffffff;
    box-sizing: border-box;
    position: absolute;
    bottom: 0;
}

.product-select-close {
    width: 80rpx;
    height: 80rpx;
    font-size: 60rpx;
    font-weight: 900;
    line-height: 80rpx;
    text-align: center;
    background: #ffffff;
    border-radius: 50%;
    position: absolute;
    top: -40rpx;
    right: 60rpx;
}

.product-select-content {
    max-height: 80vh;
    overflow: scroll;
}

.product-select-img {
    width: 160rpx;
    height: 160rpx;
    margin: 30rpx 30rpx 0 30rpx;
    vertical-align: top;
}

.product-select-info {
    width: 500rpx;
    height: 160rpx;
    margin: 30rpx 30rpx 0 0;
    vertical-align: top;
    display: inline-block;
}

.product-select-name {
    width: 500rpx;
    height: 45rpx;
    color: #999999;
    font-size: 28rpx;
    line-height: 45rpx;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    margin-bottom: 60rpx;
}

.product-select-price {
    font-size: 28rpx;
    line-height: 40rpx;
    vertical-align: top;
    display: inline-block;
}

.product-select-remain {
    font-size: 28rpx;
    line-height: 40rpx;
    margin-right: 30rpx;
    float: right;
}

.product-select-spec {
    width: 750rpx;
    margin-top: 45rpx;
    padding: 0 30rpx;
}

.product-spec-title {
    font-size: 28rpx;
    line-height: 50rpx;
    vertical-align: top;
    display: inline-block;
}

.product-spec-content {
    display: inline-block;
}

.product-spec-item {
    height: 64rpx;
    font-size: 28rpx;
    line-height: 60rpx;
    margin-left: 20rpx;
    padding: 0 50rpx;
    border: 2rpx solid #cccccc;
    display: inline-block;
}

.product-select-count {
    width: 750rpx;
    margin-top: 35rpx;
    padding: 0 30rpx;
    text-align: right;
    text {
        font-size: 28rpx;
        line-height: 64rpx;
        margin-right: 40rpx;
        display: inline-block;
    }
}

.product-count-choose {
    height: 64rpx;
    display: inline-block;
}

.product-count-reduce,
.product-count-current,
.product-count-add {
    width: 60rpx;
    height: 60rpx;
    font-size: 28rpx;
    line-height: 60rpx;
    text-align: center;
    border: 2rpx solid #cccccc;
    box-sizing: content-box;
    display: inline-block;
}

.product-count-current,
.product-count-add {
    border-left: none;
}

.product-select-buy {
    width: 750rpx;
    height: 100rpx;
    color: #ffffff;
    font-size: 32rpx;
    line-height: 100rpx;
    text-align: center;
    margin: 20rpx 0;
}
</style>
<template>
    <view class="container" style="padding-top:{{isIphoneX ? '87px' : '62px'}}">
        <navBar navTitle="放心优选" :isIphoneX.sync="isIphoneX"></navBar>
        <view class="coupon-module">
            <repeat for="{{couponModule}}" key="id">
                <view class="coupon-module-item" style="{{index == curModule ? 'color:' + color.red : ''}}" @tap="chooseModule({{index}})">
                    <text>{{item.name}}</text>
                    <view class="coupon-module-bar" style="{{index == curModule ? 'background:' + color.red : ''}}"></view>
                </view>
            </repeat>
        </view>
        <scroll-view scroll-y scroll-into-view="{{scrollToModule}}" scroll-with-animation="true" bindscroll="moduleScroll" class="coupon-content">
            <view class="coupon-rank coupon-module-block" id="{{couponModule[0].id}}">
                <view class="coupon-rank-container" style="background:{{color.red}}">
                    <view class="coupon-rank-title">王者社区排行榜</view>
                    <view class="coupon-rank-content">敬请期待</view>
                </view>
            </view>
            <view class="coupon-block coupon-limit coupon-module-block" id="{{couponModule[1].id}}">
                <view class="coupon-block-title">限时秒杀</view>
                <view class="coupon-limit-time">距{{isStarted?'结束':'开场'}}还剩
                    <text style="background:{{color.red}}">{{restTime.hour}}</text>:
                    <text style="background:{{color.red}}">{{restTime.minute}}</text>:
                    <text style="background:{{color.red}}">{{restTime.second}}</text>
                </view>
                <view class="coupon-limit-product">
                    <repeat for="{{limitProduct}}" key="id">
                        <product :id.sync="item.id" :imgUrl.sync="item.imgUrl" :name.sync="item.name" :desc.sync="item.desc">
                            <view wx:if="{{isStarted == false}}" slot="extra" class="limit-item-time" style="color:{{color.red}}">{{startFormatTime}} 开抢</view>
                            <view wx:else slot="extra" class="limit-item-time" style="color:{{color.red}}">正在抢购</view>
                            <view slot="price" class="limit-item-price">
                                <view class="limit-item-price">¥{{item.price}}
                                    <text wx:if="{{item.oriPrice > 0}}">¥{{item.oriPrice}}</text>
                                </view>
                            </view>
                            <image slot="cart" src="/icons/cart-recommend.png" class="product-icon-cart" @tap.stop="chooseSpec(0, {{index}})" />
                        </product>
                    </repeat>
                </view>
            </view>
            <view class="coupon-recommend">
                <image src="{{recommendImg}}" class="coupon-recommend-img" />
                <view class="coupon-update">
                    <swiper vertical="true" autoplay="true" interval="5000" duration="1000" circular="true" class="coupon-recommend-update">
                        <repeat for="{{update}}" key="index">
                            <swiper-item class="update-item" catchtouchmove='changeUpdate' @tap="navToProduct({{item.product.id}})">
                                <image src="{{item.user.avatar}}" class="coupon-recommend-avatar" />
                                <view class="coupon-recommend-text">{{item.user.name}}【{{item.product.name}}】商品拼单已成功，商品已售{{item.product.soldCount}}件</view>
                            </swiper-item>
                        </repeat>
                    </swiper>
                </view>
            </view>
            <view class="coupon-block coupon-group coupon-module-block" id="{{couponModule[2].id}}">
                <view class="coupon-block-title">优选拼单购</view>
                <view class="coupon-group-product">
                    <repeat for="{{groupProduct}}" key="id">
                        <view class="product-item" @tap="navToProduct({{item.id}})">
                            <image src="{{item.imgUrl}}" class="product-item-img" />
                            <view class="product-item-content">
                                <view class="product-item-name">{{item.name}}</view>
                                <view class="group-item-sold">
                                    <repeat for="{{item.buyer}}" key="id" item="buyer">
                                        <image src="{{buyer.avatar}}" class="group-item-buyer" />
                                    </repeat>
                                    <image src="/icons/coupon/ellipsis.png" class="group-item-ellipsis" />
                                    <text>已团{{item.soldCount}}件</text>
                                </view>
                                <view class="group-item-price" style="color:{{color.red}}">¥{{item.price}}
                                    <text wx:if="{{item.oriPrice>0}}">¥{{item.oriPrice}}</text>
                                </view>
                                <image src="/icons/cart-recommend.png" class="product-icon-cart" @tap.stop="chooseSpec(1, {{index}})" />
                            </view>
                        </view>
                    </repeat>
                </view>
            </view>
            <view class="coupon-block coupon-module-block" id="{{couponModule[3].id}}">
                <view class="coupon-block-title">有奖知识问答</view>
                <view class="coupon-quetion-content" style="background:{{color.red}}">敬请期待</view>
            </view>
            <view class="coupon-block">
                <view class="coupon-block-title">游戏赢大奖</view>
                <view class="coupon-game-content" style="background:{{color.red}}">敬请期待</view>
            </view>
        </scroll-view>
        <view wx:if="{{isChoosing}}" class="product-select" @tap="selectClose()">
            <view class="product-select-container" @tap.stop="selectContent()">
                <view class="product-select-close" @tap="selectClose()">×</view>
                <view class="product-select-content">
                    <image mode="aspectFill" src="{{curProduct.imgUrl}}" class="product-select-img" />
                    <view class="product-select-info">
                        <view class="product-select-name">{{curProduct.name}}</view>
                        <view class="product-select-price" style="color:{{color.red}}">￥{{curProduct.spec[specChoose].price}}</view>
                        <view class="product-select-remain">库存：{{curProduct.remain}}</view>
                    </view>
                    <view class="product-select-spec">
                        <view class="product-spec-title">规格：</view>
                        <view class="product-spec-content">
                            <repeat for="{{curProduct.spec}}" key="index">
                                <view class="product-spec-item" style="{{index == specChoose? 'color:' + color.red + ';border: 2rpx solid ' + color.red + ';' : ''}}" @tap="specChoose({{index}})">{{item.name}}</view>
                            </repeat>
                        </view>
                    </view>
                    <view class="product-select-count">
                        <text>数量：</text>
                        <view class="product-count-choose">
                            <view class="product-count-reduce" style="{{count > 1 ? 'color:' + color.red + ';' : ''}}" @tap="countMinus">-</view>
                            <view class="product-count-current" style="color:{{color.red}};">{{count}}</view>
                            <view class="product-count-add" style="{{count < curProduct.remain ? 'color:' + color.red + ';' : ''}}" @tap="countPlus">+</view>
                        </view>
                    </view>
                    <view hover-class="navigator-hover" class="product-select-buy" style="background:{{color.red}}" @tap.stop="addToCart">加入购物车</view>
                </view>
            </view>
        </view>
    </view>
</template>

<script>
import wepy from 'wepy';
import NavBar from '@/components/navBar';
import Product from '@/components/productBlock';
import api from '@/api/api';

export default class Coupon extends wepy.page {
    components = {
        navBar: NavBar,
        product: Product
    };

    data = {
        couponModule: [
            { id: 'module1', name: '社区积分榜' },
            { id: 'module2', name: '限时秒杀' },
            { id: 'module3', name: '拼团购' },
            { id: 'module4', name: '放心赢红包' }
        ],
        curModule: 0,
        scrollToModule: '',
        recommendImg: '',
        isStarted: false,
        startTime: '',
        endTime: '',
        startFormatTime: '',
        endFormatTime: '',
        restTime: {},
        update: [
            {
                user: {
                    id: '',
                    avatar: '',
                    name: '北冥有鱼'
                },
                product: {
                    id: '',
                    name: '随便阅读灯',
                    soldCount: 9999
                }
            },
            {
                user: {
                    id: '',
                    avatar: '',
                    name: '北冥有鱼'
                },
                product: {
                    id: '',
                    name: '随便阅读灯',
                    soldCount: 9999
                }
            },
            {
                user: {
                    id: '',
                    avatar: '',
                    name: '北冥有鱼'
                },
                product: {
                    id: '',
                    name: '随便阅读灯',
                    soldCount: 9999
                }
            }
        ],
        limitProduct: [],
        groupProduct: [],
        moduleTop: [],
        moveStartPos: 0,
        isChoosing: false,
        curProduct: {},
        specChoose: 0,
        count: 1,
        isIphoneX: false,
        color: {}
    };

    methods = {
        chooseModule(index, e) {
            this.scrollToModule = this.couponModule[index].id;
            this.curModule = index;
            this.$apply();
        },

        moduleScroll(e) {
            var self = this;
            let scrollTop = e.detail.scrollTop;
            let nextTop =
                self.curModule < self.moduleTop.length - 1
                    ? self.moduleTop[self.curModule + 1].top
                    : self.moduleTop[self.curModule].top;
            let curTop = self.moduleTop[self.curModule].top;
            if (scrollTop > self.moveStartPos) {
                self.moveStartPos = scrollTop;
                if (scrollTop > nextTop - 10) {
                    self.curModule++;
                    self.$apply();
                }
            } else if (scrollTop < self.moveStartPos) {
                self.moveStartPos = scrollTop;
                if (scrollTop < curTop - 10) {
                    self.curModule--;
                    self.$apply();
                }
            }
        },

        navToProduct(product, events) {
            wx.navigateTo({
                url: '/pages/product/product?id=' + product
            });
        },

        changeUpdate() {
            return false;
        },

        chooseSpec(type, index) {
            var self = this;
            if (type == 0) {
                self.curProduct = self.limitProduct[index];
            } else if (type == 1) {
                self.curProduct = self.groupProduct[index];
            }
            self.specChoose = 0;
            self.count = 1;
            self.isChoosing = true;
            self.$apply();
            console.log(self.curProduct);
        },

        specChoose(spec, e) {
            this.specChoose = spec;
            this.$apply();
        },

        selectClose() {
            this.isChoosing = false;
            this.$apply();
        },

        selectContent() {
            return;
        },

        countMinus() {
            if (this.count > 1) {
                this.count--;
                this.$apply();
            }
        },

        countPlus() {
            if (this.count < this.curProduct.remain) {
                this.count++;
                this.$apply();
            }
        },

        addToCart() {
            var self = this;
            var shoppingCart = wx.getStorageSync('shoppingCart');
            var hasCur = false;
            if (shoppingCart.length > 0) {
                shoppingCart.forEach(element => {
                    if (element.id == self.curProduct.id) {
                        hasCur = true;
                        element.count += self.count;
                        return;
                    }
                });
            } else {
                shoppingCart = [];
            }

            if (hasCur == false) {
                shoppingCart.push({
                    id: self.curProduct.id,
                    name: self.curProduct.name,
                    image: self.curProduct.imgUrl,
                    spec: self.curProduct.spec[self.specChoose].name,
                    price: self.curProduct.spec[self.specChoose].price,
                    oriPrice: self.curProduct.oriPrice,
                    count: self.count
                });
            }

            wx.setStorageSync('shoppingCart', shoppingCart);
            wx.showToast({
                title: '添加成功',
                icon: 'success',
                duration: 1000
            });

            console.log(shoppingCart);
            this.isChoosing = false;
            this.$apply();
        }
    };

    events = {};

    getFormatTime() {
        var self = this;
        let startTimeStr = self.data.startTime;
        let startTime = new Date(startTimeStr);
        var month, day, hour, minute;

        month = startTime.getMonth() + 1;
        day = startTime.getDate();
        hour = startTime.getHours();
        minute = startTime.getMinutes();

        self.startFormatTime =
            month +
            '月' +
            day +
            '日 ' +
            self.timeFormat(hour) +
            ':' +
            self.timeFormat(minute);
        self.$apply();
    }

    timeFormat(param) {
        //小于10的格式化函数
        var format = parseInt(param);
        return format < 10 ? '0' + format : format;
    }

    countDown() {
        var self = this;
        let nowTime = new Date().getTime();
        let startTimeStr = self.data.startTime;
        let endTimeStr = self.data.endTime;
        let countDown = {};

        // 对结束时间进行处理渲染到页面
        let startTime = new Date(startTimeStr).getTime();
        let endTime = new Date(endTimeStr).getTime();
        // 如果活动未结束，对时间进行处理
        if (nowTime > endTime) {
            self.isStarted = true;
            countDown = {
                day: '0',
                hour: '00',
                minute: '00',
                second: '00'
            };
        } else {
            var time;
            if (nowTime >= startTime) {
                self.isStarted = true;
                time = (endTime - nowTime) / 1000;
            } else {
                time = (startTime - nowTime) / 1000;
            }
            let day = parseInt(time / (60 * 60 * 24));
            let hou = parseInt((time % (60 * 60 * 24)) / 3600);
            let min = parseInt(((time % (60 * 60 * 24)) % 3600) / 60);
            let sec = parseInt(((time % (60 * 60 * 24)) % 3600) % 60);
            countDown = {
                day: day,
                hour: self.timeFormat(hou),
                minute: self.timeFormat(min),
                second: self.timeFormat(sec)
            };
        }
        // 渲染，然后每隔一秒执行一次倒计时函数
        self.restTime = countDown;
        self.$apply();
        if (self.timer) {
            clearInterval(self.timer);
        }
        self.timer = setInterval(function() {
            if (self.restTime.second > 0) {
                self.restTime.second--;
            } else if (self.restTime.minute > 0) {
                self.restTime.second = 59;
                self.restTime.minute--;
            } else if (self.restTime.hour > 0) {
                self.restTime.second = 59;
                self.restTime.minute = 59;
                self.restTime.hour--;
            } else if (self.restTime.day > 0) {
                self.restTime.hour = 23;
                self.restTime.second = 59;
                self.restTime.minute = 59;
                self.restTime.day--;
            } else {
                nowTime = new Date().getTime();
                if (nowTime >= endTime) {
                    clearInterval(this);
                } else if (nowTime >= startTime) {
                    self.isStarted = true;
                    let time = (endTime - nowTime) / 1000;
                    let day = parseInt(time / (60 * 60 * 24));
                    let hou = parseInt((time % (60 * 60 * 24)) / 3600);
                    let min = parseInt(((time % (60 * 60 * 24)) % 3600) / 60);
                    let sec = parseInt(((time % (60 * 60 * 24)) % 3600) % 60);
                    self.restTime = {
                        day: day,
                        hour: hou,
                        minute: min,
                        second: sec
                    };
                }
            }
            self.restTime.hour = self.timeFormat(self.restTime.hour);
            self.restTime.minute = self.timeFormat(self.restTime.minute);
            self.restTime.second = self.timeFormat(self.restTime.second);
            self.$apply();
        }, 1000);
        self.$apply();
    }

    onShareAppMessage() {
        return {
            title: '放心优选',
            path: '/pages/coupon/coupon'
        };
    }

    async onLoad() {
        var self = this;
        self.curModule = 0;
        self.scrollToModule = self.couponModule[0].id;
        self.color = self.$parent.globalData.color;
        self.isIphoneX = self.$parent.globalData.isIphoneX;
        self.$apply();

        let products = await api.getCouponProducts({
            query: {
                shopId: 'f8e0b4083ce54cd4ac189f857c8fdfd1'
            }
        });
        console.log(products);
        self.groupProduct = products.data.groupProducts;
        self.limitProduct = products.data.limitProducts;
        self.startTime = self.limitProduct[0].limitStartTime;
        self.endTime = self.limitProduct[0].limitEndTime;
        self.$apply();
        self.countDown();
        self.getFormatTime();

        var query = wx.createSelectorQuery();
        var top = 0;
        self.moduleTop = [];
        query
            .selectAll('.coupon-module-block')
            .boundingClientRect(rect => {
                rect.forEach((item, index) => {
                    if (index == 0) {
                        top = item.top;
                        self.$apply();
                    }
                    self.moduleTop.push({ top: item.top - top });
                });
            })
            .exec();
        self.$apply();
    }
}
</script>
